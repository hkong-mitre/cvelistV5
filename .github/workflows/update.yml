# Github Action for updates to the repository

name: CVE Update
on:
  # run every 5~10 minutes (min Github scheduling allowed)
  # note this may not complete when the hourly "CVE Release" workflow starts, so that this update may not be reflected
  #   in the CVE Release artifacts
  # note also that if this job runs longer than 5 minutes, the next job will run 5 minutes after this completes
  schedule:
    - cron: '*/5 * * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'debug'
      params:
        description: 'command line arguments to update'
        required: false
        default: ''
jobs:
  update-cves:
    environment: development
    runs-on: ubuntu-latest
    env:
      CVE_SERVICES_URL: https://cveawg.mitre.org
      CVES_BASE_DIRECTORY: ./preview_cves
      CVES_DEFAULT_UPDATE_LOOKBACK_IN_MINS: 180
      CVE_API_ORG: ${{secrets.CVE_API_ORG}}
      CVE_API_USER: ${{secrets.CVE_API_USER}}
      CVE_API_KEY: ${{secrets.CVE_API_KEY}}
      GH_OWNER: hkong-mitre
      GH_REPO: cvelistV5
    outputs:
      v_current_run_timestamp: ${{ steps.get-timestamp.outputs.out }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: update log
        # run: echo "out=$(date '+%Y-%m-%d_%H%M_UTC')" >> $GITHUB_OUTPUT
        run: |
          export TEMP_TIMESTAMP=$(date '+%Y-%m-%d_%H%M_UTC')
          echo "out=$TEMP_TIMESTAMP" >> $GITHUB_OUTPUT
          git pull
          node ./.github/workflows/dist/index.js update ${{ github.event.inputs.params }}
          git status
          git config user.email "github_action@example.com"
          git config user.name "Github Action"
          git add preview_cves
          git commit -m "[UPDATE] updated/added CVEs from cveawg.mitre.org"
          git remote set-url origin https://${GITHUB_TOKEN}@github.com/hkong-mitre/cvelistV5.git
          git push

      # - name: create release with source code as artifacts
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     name: CVE ${{ needs.generate-name.outputs.v_current_run_timestamp }}
      #     # body: Descriptions for CVE ${{ needs.generate-name.outputs.v_current_run_timestamp }} goes here
      #     body_path: ./release_notes.md
      #     tag_name: cve_${{ needs.generate-name.outputs.v_current_run_timestamp }}
      #     files: |
      #       release_notes.md
      #     #   cves_${{ needs.generate-name.outputs.v_current_run_timestamp }}.zip
