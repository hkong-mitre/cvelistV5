# Github Action for updates to the repository

name: CVE Update

on:
  # run every 5 minutes (min Github scheduling allowed)
  # note this may not complete when the hourly "CVE Release" workflow starts, so that this update may not be reflected
  #   in the CVE Release artifacts
  # note also that if this job runs longer than 5 minutes, the next job will run 5 minutes after this completes
  schedule:
    - cron: '*/5 * * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'debug'
jobs:
  generate-name:
    environment: development
    runs-on: ubuntu-latest
    outputs:
      v_current_run_timestamp: ${{ steps.get-timestamp.outputs.out }}
    steps:
      - name: get-timestamp
        id: get-timestamp
        # run: echo "out=$(date '+%Y-%m-%d_%H%M_UTC')" >> $GITHUB_OUTPUT
        run: |
          echo "out=$(date '+%Y-%m-%d_%H%M_UTC')" >> $TEMP_TIMESTAMP
          echo "$TEMP_TIMESTAMP" >> $GITHUB_OUTPUT
      - name: update-log
        run: echo "$TEMP_TIMESTAMP" >> update_log.md
      # - name: create release with source code as artifacts
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     name: CVE ${{ needs.generate-name.outputs.v_current_run_timestamp }}
      #     # body: Descriptions for CVE ${{ needs.generate-name.outputs.v_current_run_timestamp }} goes here
      #     body_path: ./release_notes.md
      #     tag_name: cve_${{ needs.generate-name.outputs.v_current_run_timestamp }}
      #     files: |
      #       release_notes.md
      #     #   cves_${{ needs.generate-name.outputs.v_current_run_timestamp }}.zip
